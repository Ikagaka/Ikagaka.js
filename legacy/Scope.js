// Generated by CoffeeScript 1.7.1
var Scope;

Scope = (function() {
  function Scope(scopeId, shell) {
    this.scopeId = scopeId;
    this.shell = shell;
    this.$scope = $("<div />").addClass("scope").css({
      "bottom": "0px",
      "right": (this.scopeId * 240) + "px"
    });
    this.$style = $("<style scoped />").html(".scope {\n  position: absolute;\n  border: none;\n  margin: 0px;\n  padding: 0px;\n  -webkit-user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}");
    this.$surface = $("<div />").addClass("surface").hide();
    this.$balloon = $("<div />").addClass("balloon").hide();
    this.$scope.append(this.$surface).append(this.$balloon).append(this.$style);
    this.element = this.$scope[0];
    this.listener = function() {};
    this.currentSurface = null;
    this.currentBalloon = new Balloon(shell);
  }

  Scope.prototype.surface = function(surfaceId) {
    if (surfaceId === -1) {
      this.$surface.hide();
    } else {
      this.$surface.show();
    }
    if (surfaceId !== void 0) {
      if (!!this.currentSurface) {
        this.currentSurface.destructor();
      }
      if (!!this.currentSurface) {
        $(this.currentSurface.element).remove();
      }
      this.currentSurface = this.shell.getSurface(this.scopeId, surfaceId);
      this.currentSurface.setEventListener((function(_this) {
        return function(ev) {
          return _this.listener(ev);
        };
      })(this));
      if (!!this.currentSurface) {
        this.$surface.append(this.currentSurface.element);
      }
    }
    return this.currentSurface;
  };

  Scope.prototype.balloon = function(balloonId) {
    if (balloonId === -1) {
      this.$balloon.hide();
    } else {
      this.$balloon.show();
    }
    if (!!this.currentBalloon) {
      this.$balloon.append(this.currentBalloon.element);
    }
    return this.currentBalloon;
  };

  Scope.prototype.setEventListener = function(listener) {
    this.listener = listener;
    return void 0;
  };

  return Scope;

})();
